Démo de la présentation "Le classpath n'est pas mort... mais presque"
---------------

Ce projet a servi pour la démo à DevoxxFR 2013

Préparation
-----------

0-Prérequis : utiliser JDK 8, Maven est configuré ainsi.

1° étape : cloner le projet. Ben oui, c'est du git.

 git clone git://github.com/hasalex/classpath-demo.git
 
 cloner et builder le projet tomcat-modules dont il depend
 cf. https://github.com/hasalex/tomcat-modules
 
 Pour cloner sous eclipse avec eGit, ajouter  à la racine le fichier .project avant d'importer le projet
 Ceci pour definir un projet maven multi-modules.

2° étape : créer un répertoire de travail

 mkdir classpath-demo-work
 cd classpath-demo-work
 sh ../classpath-demo/scripts/prepare.sh

Rem. : pour l'utiliser sous l'os windows utiliser 'git bash' : ca marche
par exemple pour setter le JAVA_HOME, ajouter en debut de script (attention au chemin des repertoires !)
export JAVA_HOME=/c/Java/jdk1.8.0_102
export PATH=$JAVA_HOME/bin:$PATH

Rem. : le script doit subir quelques améliorations, par exemple pour la copie de jboss-module.jar

Démo 1 : classpath & bootclasspath
-----------

# Ça ne marche pas
java fr.sewatech.classpath.Count 40 45

# Ça marche
java -cp lib/message-launcher.jar fr.sewatech.classpath.Count 40 45

# Court-circuiter le Integer par défaut
java -Xbootclasspath/p:lib/message-launcher.jar fr.sewatech.classpath.Count 40 45

# En théorie, le endorsed ne devrait pas avoir d'effet sur Integer. En réalité,...
java -Djava.endorsed.dirs=lib fr.sewatech.classpath.Count 40 45

Démo 2 : URLClassLoader & custom ClassLoader
-----------

# Ça ne marche pas
java -cp lib/message-launcher.jar fr.sewatech.classpath.Hello

# Ça marche
java -cp "lib/*" fr.sewatech.classpath.Hello

# Ça marche
java -cp lib/message-launcher.jar fr.sewatech.classpath.HelloViaURL

# Ça ne marche pas
java -cp lib/message-launcher.jar:lib/message-service.jar fr.sewatech.classpath.HelloViaURL

# Ça marche
java -cp lib/message-launcher.jar fr.sewatech.classpath.HelloViaMvnRepo 2.0-SNAPSHOT
# Ça marche
java -cp lib/message-launcher.jar fr.sewatech.classpath.HelloViaMvnRepo 2.0-SNAPSHOT local

# Ça ne marche pas
java -cp lib/message-launcher.jar:lib/message-service.jar fr.sewatech.classpath.HelloViaMvnRepo 2.0-SNAPSHOT
# Ça marche
java -cp lib/message-launcher.jar:lib/message-service.jar fr.sewatech.classpath.HelloViaMvnRepo 2.0-SNAPSHOT local

Démo 3 : jar hell
-----------

# Ça ne marche pas
java -cp "lib/*" fr.sewatech.classpath.Hello log

Démo 4 : jboss modules
-----------

# Ça marche, comme avant (si les dépendances ont les bons slots)
java -jar jboss-modules/jboss-modules.jar -mp jboss-modules fr.sewatech.message-launcher
# Ça marche, mieux qu'avant
java -jar jboss-modules/jboss-modules.jar -mp jboss-modules fr.sewatech.message-launcher log
